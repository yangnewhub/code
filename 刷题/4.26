//#include <iostream>
//#include <vector>
//using namespace std;
//
//long long ret = 0;
//bool Canbecame(vector<long long >& nums)
//{
//    long long  n = nums.size();
//    long long  left = 0, right = n - 1;
//
//    while (left < right) {
//        if (n % 2 == 0 && left + 1 == right && nums[left] != nums[right]) return  false;
//        if (nums[left] != nums[right]) {
//            if (nums[left] < nums[right])
//            {
//                nums[left + 1] += nums[right] - nums[left];
//                ret += nums[right] - nums[left];
//            }
//            else {
//                nums[right - 1] += nums[left] - nums[right];
//                ret += nums[left] - nums[right];
//            }
//        }
//        left++;
//        right--;
//    }
//    return true;
//}
//int main() {
//    long long  n;
//    cin >> n;
//    vector<long long > nums(n);
//    for (long long i = 0;i < n;i++) cin >> nums[i];
//
//    if (Canbecame(nums))cout << ret;
//    else cout << -1;
//
//    return 0;
//
//}
//// 64 位输出请用 printf("%lld


//#include <iostream>
//#include <vector>
//#include <string>
//#include <map>
//using namespace std;
//
//int main() {
//    string str;
//    cin >> str;
//    int n = str.size();
//    str = " " + str;
//    vector<int> f(n + 1, 1), g(n + 1);
//    f[0] = 0;
//    int ret = 0;
//    map<char, int> hash;
//    hash[str[1]] = 1;
//    for (int i = 2;i <= n;i++) {
//        //f[i]选当前位置
//        f[i] = max(hash[str[i] - 1], hash[str[i] + 1]) + 1;
//        hash[str[i]] = max(hash[str[i]], f[i]);
//        //g[i]不选
//        g[i] = max(f[i - 1], g[i - 1]);
//        ret = max(ret, max(g[i], f[i]));
//    }
//    cout << ret;
//    return 0;
//}
//// 64 位输出请用 printf("%lld")

#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;

int main() {
    int n, k, t;
    cin >> n >> k >> t;
    vector<int> nums(n);
    for (int i = 0;i < n;i++)cin >> nums[i];
    vector<long long> sum(n);
    sum[0] = nums[0];
    for (int i = 1;i < n;i++) sum[i] = sum[i - 1] + nums[i];
    vector<long long> arr;
    for (int i = 0;i < n;i++) {
        for (int j = i;j < n;j++) {
            int x = sum[j] - sum[i] + nums[i];
            if (x % t == 0) arr.push_back(x);
        }
    }
    sort(arr.begin(), arr.end());
    long long ret = 0;
    int index = arr.size() - 1;
    while (k) {
        if (arr[index] % t == 0) {
            ret += arr[index];
            k--;
        }
        index--;
    }
    cout << ret;
}
// 64 位输出请用 printf("%lld")